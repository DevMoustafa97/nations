{"version":3,"sources":["Header.js","Main.js","Country.js","App.js","index.js"],"names":["Header","className","onClick","alert","Main","useState","region","setRegion","search","setSearch","countries","setCountries","firstRender","setFirstRender","useEffect","fetch","then","res","json","data","Array","isArray","catch","err","finally","console","clear","id","type","placeholder","value","onChange","e","target","length","map","country","i","to","alpha3Code","src","flag","alt","name","population","capital","renderCountries","Country","countryCode","useParams","setCountry","nativeName","subregion","topLevelDomain","tld","currencies","cr","code","symbol","languages","lng","borders","brd","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f88eeb0.chunk.js","sourcesContent":["import './Header.css'\r\nconst Header  = ()=>{\r\n    return (\r\n    <header>\r\n        <section className=\"app__header container\">\r\n        <h1>Where in the world</h1>\r\n        <button onClick={()=>alert('Comming Soon !')}>\r\n        <i className=\"far fa-moon\"></i>\r\n            Dark Mode\r\n        </button>\r\n        </section>\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default Header","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Main.css\";\r\nconst Main = () => {\r\n  const [region, setRegion] = useState(\"africa\");\r\n  const [search, setSearch] = useState(\"\");\r\n  const [countries, setCountries] = useState([]);\r\n  const [firstRender, setFirstRender] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://restcountries.eu/rest/v2/region/africa\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setCountries(data);\r\n        setFirstRender(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(`https://restcountries.eu/rest/v2/region/${region}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setCountries(data);\r\n      });\r\n  }, [region]);\r\n\r\n  useEffect(() => {\r\n    if (search) {\r\n      fetch(`https://restcountries.eu/rest/v2/name/${search}`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (Array.isArray(data)) {\r\n            setCountries(data);\r\n          } else {\r\n            setCountries([]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setCountries([]);\r\n        })\r\n        .finally(() => {\r\n          console.clear();\r\n        });\r\n    }\r\n  }, [search]);\r\n\r\n  const renderCountries = (countries) => {\r\n    if (countries.length) {\r\n      return countries.map((country, i) => {\r\n        return (\r\n          <article className=\"coutnry-card\" key={i}>\r\n            <Link to={`${country.alpha3Code}`}>\r\n              <img\r\n                src={country.flag}\r\n                alt={country.name}\r\n                />\r\n              <div className=\"details\">\r\n                <h2>{country.name}</h2>\r\n                <p> <b> Population: </b>{country.population}</p>\r\n                <p> <b> Region: </b>{country.region}</p>\r\n                <p> <b> Capital: </b>{country.capital}</p>\r\n              </div>\r\n            </Link>\r\n          </article>\r\n        );\r\n      });\r\n    } else {\r\n      return <h3>No Countries Found !</h3>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        <section>\r\n          <div className=\"controls container\">\r\n            <div id=\"search\">\r\n            <i className=\"fas fa-search\"></i>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search for a country...\"\r\n              value={search}\r\n              onChange={(e) => {\r\n                setSearch(e.target.value);\r\n              }}\r\n              />\r\n            </div>\r\n            <div id=\"filter\">\r\n            <select\r\n              value={region}\r\n              onChange={(e) => {\r\n                setRegion(e.target.value);\r\n              }}\r\n              >\r\n              <option value=\"africa\">Africa</option>\r\n              <option value=\"americas\">Americas</option>\r\n              <option value=\"asia\">Asia</option>\r\n              <option value=\"europe\">Europe</option>\r\n              <option value=\"oceania\">Oceania</option>\r\n            </select>\r\n                <i className=\"fas fa-chevron-down\"></i>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <article className=\"countries container\">\r\n          {firstRender ? <p>loading</p> : renderCountries(countries)}\r\n        </article>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { Link, useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport './Country.css'\r\nconst Country = () => {\r\n  const { countryCode } = useParams();\r\n  const [country, setCountry] = useState({});\r\n  useEffect(() => {\r\n    fetch(`https://restcountries.eu/rest/v2/alpha/${countryCode}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setCountry(data);\r\n      });\r\n  }, [countryCode]);\r\n\r\n  return (\r\n    <article className=\"country-page container\">\r\n      <section className=\"back\" >\r\n        <Link to=\"/\">\r\n          <button>\r\n          <i className=\"fas fa-long-arrow-alt-left\"></i>\r\n            Back</button>\r\n        </Link>\r\n      </section>\r\n      <article className=\"country-info\">\r\n        <img src={country.flag} alt={country.name} />\r\n      <div className=\"data\">\r\n            <h2>{country.name}</h2>\r\n        <div className=\"data-block\">\r\n        <article>\r\n          <section>\r\n            <dl>\r\n              <dt>Native Name:</dt>\r\n              <dd>{country.nativeName}</dd>\r\n              <dt>Population:</dt>\r\n              <dd>{country.population}</dd>\r\n              <dt>Region:</dt>\r\n              <dd>{country.region}</dd>\r\n              <dt>Sub Region:</dt>\r\n              <dd>{country.subregion}</dd>\r\n              <dt>Capital:</dt>\r\n              <dd>{country.capital}</dd>\r\n            </dl>\r\n          </section>\r\n        </article>\r\n        <section>\r\n          <dl>\r\n            <dt>Top Level Domain:</dt>\r\n            {country.topLevelDomain\r\n              ? country.topLevelDomain.map((tld, i) => <dd key={i}>{tld}</dd>)\r\n              : \"loading\"}\r\n            <dt>Currencies:</dt>\r\n            {country.currencies\r\n              ? country.currencies.map((cr, i) => (\r\n                  <dd key={i}>\r\n                    {cr.name}-({cr.code}) {cr.symbol}\r\n                  </dd>\r\n                ))\r\n              : \"loading\"}\r\n            <dt>Languages:</dt>\r\n            <dd>\r\n              <ul>\r\n                {country.languages\r\n                  ? country.languages.map((lng, i) => (\r\n                      <li key={i}>\r\n                        {lng.name}-{lng.nativeName}\r\n                      </li>\r\n                    ))\r\n                  : \"loading\"}\r\n              </ul>\r\n            </dd>\r\n          </dl>\r\n        </section>\r\n        </div>\r\n        <section className=\"borders\">\r\n       \r\n          <dl>\r\n            <dt>Border Countries:</dt>\r\n            <dd>\r\n              <ul>\r\n                {country.borders\r\n                  ? country.borders.map((brd, i) => (\r\n                      <li key={i}>\r\n                        {\" \"}\r\n                        <Link to={brd}>\r\n                          <button>{brd}</button>\r\n                        </Link>\r\n                      </li>\r\n                    ))\r\n                  : \"loading\"}\r\n              </ul>\r\n            </dd>\r\n          </dl>\r\n        </section>\r\n      </div>\r\n      </article>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n","import './App.css';\nimport Header from './Header'\nimport Main from './Main'\nimport Country from './Country'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Router>\n        <div className=\"App\">\n            <Header />\n            <Switch>\n              <Route path=\"/\" exact>\n                <Main />\n              </Route>\n              <Route path=\"/:countryCode\">\n                <Country />\n              </Route>\n            </Switch>\n        </div>\n      </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}